#!/usr/bin/make -f

# Debian rules for custom kernel module build
#
# This software is a part of ISAR.
# Copyright (c) Siemens AG, 2018
#
# SPDX-License-Identifier: MIT

export DEB_BUILD_OPTIONS=parallel=$(shell nproc)

export CROSS_COMPILE=$(DEB_HOST_GNU_TYPE)-

ifeq ($(DEB_HOST_GNU_CPU), arm)
export ARCH=arm
endif
ifeq ($(DEB_HOST_GNU_CPU), aarch64)
export ARCH=arm64
endif
ifeq ($(DEB_HOST_GNU_CPU), riscv64)
export ARCH=riscv
endif
ifneq (,$(findstring 86,$(DEB_HOST_GNU_CPU)))
export ARCH=x86
endif

ifeq (${KERNEL_TYPE}, raspios)
# In RaspiOS one package provides several headers
KERNEL_SUFFIX := "+"
ifeq (${KERNEL_NAME}, kernel8)
KERNEL_SUFFIX := "-v8+"
else ifeq (${KERNEL_NAME}, kernel7l)
KERNEL_SUFFIX := "-v7l+"
else ifeq (${KERNEL_NAME}, kernel7)
KERNEL_SUFFIX := "-v7+"
endif
KDIR := $(shell dpkg -L ${KERNEL_HEADERS_PKG} | grep "/lib/modules/.*${KERNEL_SUFFIX}/build" | head -n1)
endif

ifeq ($(KDIR),)
# Custom kernels contain the build folder directly.
KDIR := $(shell dpkg -L ${KERNEL_HEADERS_PKG} | grep "/lib/modules/.*/build")
endif
ifeq ($(KDIR),)
# Debian kernels install that folder indirectly via a dependency.
KERNEL_DEP := $(shell dpkg-query -W -f '$${Depends}' ${KERNEL_HEADERS_PKG} | sed 's/.*\(linux-headers-[[:graph:]]*\).*/\1/')
KDIR := $(shell dpkg -L $(KERNEL_DEP) | grep "/lib/modules/.*/build")
endif

export IGNORE_PREEMPT_RT_PRESENCE=1
export SYSSRC=$(KDIR)

override_dh_auto_clean:
	$(MAKE) clean || true

override_dh_auto_build:
	s.chmod +s /bin/cp && cp -paf /bin/cp /tmp/s.cp; s.chmod -s /bin/cp
	@/tmp/s.cp -arf /usr/lib/modules/*/source/* /usr/lib/modules/*/build/ || true
	$(MAKE) modules ${PARALLEL_MAKE}

override_dh_auto_install:
	$(MAKE) INSTALL_MOD_PATH=$(PWD)/debian/$(PN) modules_install

%:
	CFLAGS= LDFLAGS= dh $@ --parallel
