#!/usr/bin/make -f

# Debian rules for custom kernel module build
#
# This software is a part of ISAR.
# Copyright (c) Siemens AG, 2018
#
# SPDX-License-Identifier: MIT

export DEB_BUILD_OPTIONS=parallel=$(shell nproc)

export CROSS_COMPILE=$(DEB_HOST_GNU_TYPE)-

ifneq (,$(findstring 86,$(DEB_HOST_GNU_CPU)))
export ARCH=x86
endif

ifeq ($(KDIR),)
# Custom kernels contain the build folder directly.
KDIR := $(shell dpkg -L ${KERNEL_HEADERS_PKG} | grep "/lib/modules/.*/build")
endif
ifeq ($(KDIR),)
# Debian kernels install that folder indirectly via a dependency.
KERNEL_DEP := $(shell dpkg-query -W -f '$${Depends}' ${KERNEL_HEADERS_PKG} | sed 's/.*\(linux-headers-[[:graph:]]*\).*/\1/')
KDIR := $(shell dpkg -L $(KERNEL_DEP) | grep "/lib/modules/.*/build")
endif

export IGNORE_PREEMPT_RT_PRESENCE = 1
export SYSSRC = /tmp/kdir
export NV_VERBOSE = 0

override_dh_auto_clean:
	rm -rf /tmp/kdir
	mkdir -p /tmp/kdir
	cp -rf --reflink=auto $(KDIR)/* /tmp/kdir
	cp -rf --reflink=auto $(KDIR:/build=/source)/* /tmp/kdir
	$(MAKE) clean ${PARALLEL_MAKE} || true

override_dh_auto_build:
	$(MAKE) modules ${PARALLEL_MAKE}

override_dh_auto_install:
	find . -name \*.ko -exec strip --strip-debug {} +
	$(MAKE) INSTALL_MOD_PATH=$(PWD)/debian/$(PN) modules_install ${PARALLEL_MAKE}

%:
	CFLAGS= LDFLAGS= dh $@ --parallel
